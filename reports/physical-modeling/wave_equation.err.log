Traceback (most recent call last):
  File "/opt/hostedtoolcache/Python/3.8.18/x64/lib/python3.8/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/opt/hostedtoolcache/Python/3.8.18/x64/lib/python3.8/site-packages/nbclient/client.py", line 1305, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/opt/hostedtoolcache/Python/3.8.18/x64/lib/python3.8/site-packages/jupyter_core/utils/__init__.py", line 173, in wrapped
    return loop.run_until_complete(inner)
  File "/opt/hostedtoolcache/Python/3.8.18/x64/lib/python3.8/asyncio/base_events.py", line 616, in run_until_complete
    return future.result()
  File "/opt/hostedtoolcache/Python/3.8.18/x64/lib/python3.8/site-packages/nbclient/client.py", line 705, in async_execute
    await self.async_execute_cell(
  File "/opt/hostedtoolcache/Python/3.8.18/x64/lib/python3.8/site-packages/nbclient/client.py", line 1058, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/opt/hostedtoolcache/Python/3.8.18/x64/lib/python3.8/site-packages/nbclient/client.py", line 914, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
audio, sample_rate = torchaudio.load("guitar_acoustic_030-051-127.wav") 
audio = audio[0]

sr = 16000

# how many points used in sampling the transfer function
nfft = 4096

# fix random excitation
torch.manual_seed(0)

model = KarplusStrong(delay_len=103, n_fft=nfft)

print("Original:")
ipd.display(ipd.Audio(audio, rate=sr))

print("Synthesized:")
ipd.display(ipd.Audio(model.time_domain_synth(sr * 4).detach(), rate=sr))
------------------


[0;31m---------------------------------------------------------------------------[0m
[0;31mRuntimeError[0m                              Traceback (most recent call last)
Cell [0;32mIn[3], line 1[0m
[0;32m----> 1[0m audio, sample_rate [38;5;241m=[39m [43mtorchaudio[49m[38;5;241;43m.[39;49m[43mload[49m[43m([49m[38;5;124;43m"[39;49m[38;5;124;43mguitar_acoustic_030-051-127.wav[39;49m[38;5;124;43m"[39;49m[43m)[49m 
[1;32m      2[0m audio [38;5;241m=[39m audio[[38;5;241m0[39m]
[1;32m      4[0m sr [38;5;241m=[39m [38;5;241m16000[39m

File [0;32m/opt/hostedtoolcache/Python/3.8.18/x64/lib/python3.8/site-packages/torchaudio/_backend/utils.py:202[0m, in [0;36mget_load_func.<locals>.load[0;34m(uri, frame_offset, num_frames, normalize, channels_first, format, buffer_size, backend)[0m
[1;32m    116[0m [38;5;28;01mdef[39;00m [38;5;21mload[39m(
[1;32m    117[0m     uri: Union[BinaryIO, [38;5;28mstr[39m, os[38;5;241m.[39mPathLike],
[1;32m    118[0m     frame_offset: [38;5;28mint[39m [38;5;241m=[39m [38;5;241m0[39m,
[0;32m   (...)[0m
[1;32m    124[0m     backend: Optional[[38;5;28mstr[39m] [38;5;241m=[39m [38;5;28;01mNone[39;00m,
[1;32m    125[0m ) [38;5;241m-[39m[38;5;241m>[39m Tuple[torch[38;5;241m.[39mTensor, [38;5;28mint[39m]:
[1;32m    126[0m [38;5;250m    [39m[38;5;124;03m"""Load audio data from source.[39;00m
[1;32m    127[0m 
[1;32m    128[0m [38;5;124;03m    By default (``normalize=True``, ``channels_first=True``), this function returns Tensor with[39;00m
[0;32m   (...)[0m
[1;32m    200[0m [38;5;124;03m            `[channel, time]` else `[time, channel]`.[39;00m
[1;32m    201[0m [38;5;124;03m    """[39;00m
[0;32m--> 202[0m     backend [38;5;241m=[39m [43mdispatcher[49m[43m([49m[43muri[49m[43m,[49m[43m [49m[38;5;28;43mformat[39;49m[43m,[49m[43m [49m[43mbackend[49m[43m)[49m
[1;32m    203[0m     [38;5;28;01mreturn[39;00m backend[38;5;241m.[39mload(uri, frame_offset, num_frames, normalize, channels_first, [38;5;28mformat[39m, buffer_size)

File [0;32m/opt/hostedtoolcache/Python/3.8.18/x64/lib/python3.8/site-packages/torchaudio/_backend/utils.py:114[0m, in [0;36mget_load_func.<locals>.dispatcher[0;34m(uri, format, backend_name)[0m
[1;32m    112[0m     [38;5;28;01mif[39;00m backend[38;5;241m.[39mcan_decode(uri, [38;5;28mformat[39m):
[1;32m    113[0m         [38;5;28;01mreturn[39;00m backend
[0;32m--> 114[0m [38;5;28;01mraise[39;00m [38;5;167;01mRuntimeError[39;00m([38;5;124mf[39m[38;5;124m"[39m[38;5;124mCouldn[39m[38;5;124m'[39m[38;5;124mt find appropriate backend to handle uri [39m[38;5;132;01m{[39;00muri[38;5;132;01m}[39;00m[38;5;124m and format [39m[38;5;132;01m{[39;00m[38;5;28mformat[39m[38;5;132;01m}[39;00m[38;5;124m.[39m[38;5;124m"[39m)

[0;31mRuntimeError[0m: Couldn't find appropriate backend to handle uri guitar_acoustic_030-051-127.wav and format None.

