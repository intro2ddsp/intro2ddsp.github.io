Traceback (most recent call last):
  File "/opt/hostedtoolcache/Python/3.8.18/x64/lib/python3.8/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/opt/hostedtoolcache/Python/3.8.18/x64/lib/python3.8/site-packages/nbclient/client.py", line 1305, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/opt/hostedtoolcache/Python/3.8.18/x64/lib/python3.8/site-packages/jupyter_core/utils/__init__.py", line 173, in wrapped
    return loop.run_until_complete(inner)
  File "/opt/hostedtoolcache/Python/3.8.18/x64/lib/python3.8/asyncio/base_events.py", line 616, in run_until_complete
    return future.result()
  File "/opt/hostedtoolcache/Python/3.8.18/x64/lib/python3.8/site-packages/nbclient/client.py", line 705, in async_execute
    await self.async_execute_cell(
  File "/opt/hostedtoolcache/Python/3.8.18/x64/lib/python3.8/site-packages/nbclient/client.py", line 1058, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/opt/hostedtoolcache/Python/3.8.18/x64/lib/python3.8/site-packages/nbclient/client.py", line 914, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
import numpy as np
import matplotlib.pyplot as plt
from matplotlib.animation import FuncAnimation
from IPython.display import HTML

# Constants for the simple harmonic oscillator
m = 1.0  # mass (kg)
k = 1.0  # spring constant (N/m)
omega = np.sqrt(k/m)  # angular frequency (rad/s)
A = 0.5  # amplitude (m)
phi = 0  # phase (rad)

# Time array (s)
t = np.linspace(0, 4*np.pi/omega, 500)

# Oscillation function (m)
x_t = A * np.cos(omega * t + phi) + 0.5

fig, ax = plt.subplots(nrows=1, ncols=2, figsize=(8, 5))

# Setting up the subplot for animation of mass and spring
ax[0].set_xlim(-2, 2)
ax[0].set_ylim(-0.2, 1.2)  # Adjust to range [0, 1]
ax[0].set_title("Undamped Harmonic Oscillator")
ax[0].set_yticks([])  # Remove y-axis ticks
ax[0].set_xticks([])  # Remove x-axis ticks
spring, = ax[0].plot([], [], lw=2)
mass = ax[0].scatter([0], [0.5], s=300)  # Initialize at 0.5

# Setting up the subplot for the oscillation graph
ax[1].set_xlim(0, 4*np.pi/omega)
ax[1].set_ylim(0, 1)
ax[1].set_title("Oscillation vs. Time")
ax[1].set_xlabel("Time (s)")
ax[1].set_ylabel("Position (m)")
line, = ax[1].plot([], [], lw=2)
time_marker = ax[1].axvline(x=0, color='r', linestyle='--')

def init():
    spring.set_data([], [])
    mass.set_offsets([[0, 0]])  # Set as 2D structure
    line.set_data([], [])
    return spring, mass, line, time_marker

def animate(i):
    # Animation of the mass and spring
    spring.set_data([0, 0], [0, x_t[i]])
    mass.set_offsets([[0, x_t[i]]])  # Set as 2D structure

    # Oscillation graph
    line.set_data(t[:i], x_t[:i])
    time_marker.set_xdata(t[i])
    return spring, mass, line, time_marker

anim = FuncAnimation(
    fig,
    animate,
    frames=len(t),
    init_func=init,
    blit=True,
    interval=25
)

plt.close(fig)

# Show the animation
display(HTML(anim.to_html5_video()))
------------------


[0;31m---------------------------------------------------------------------------[0m
[0;31mRuntimeError[0m                              Traceback (most recent call last)
Cell [0;32mIn[1], line 67[0m
[1;32m     64[0m plt[38;5;241m.[39mclose(fig)
[1;32m     66[0m [38;5;66;03m# Show the animation[39;00m
[0;32m---> 67[0m display(HTML([43manim[49m[38;5;241;43m.[39;49m[43mto_html5_video[49m[43m([49m[43m)[49m))

File [0;32m/opt/hostedtoolcache/Python/3.8.18/x64/lib/python3.8/site-packages/matplotlib/animation.py:1284[0m, in [0;36mAnimation.to_html5_video[0;34m(self, embed_limit)[0m
[1;32m   1281[0m path [38;5;241m=[39m Path(tmpdir, [38;5;124m"[39m[38;5;124mtemp.m4v[39m[38;5;124m"[39m)
[1;32m   1282[0m [38;5;66;03m# We create a writer manually so that we can get the[39;00m
[1;32m   1283[0m [38;5;66;03m# appropriate size for the tag[39;00m
[0;32m-> 1284[0m Writer [38;5;241m=[39m [43mwriters[49m[43m[[49m[43mmpl[49m[38;5;241;43m.[39;49m[43mrcParams[49m[43m[[49m[38;5;124;43m'[39;49m[38;5;124;43manimation.writer[39;49m[38;5;124;43m'[39;49m[43m][49m[43m][49m
[1;32m   1285[0m writer [38;5;241m=[39m Writer(codec[38;5;241m=[39m[38;5;124m'[39m[38;5;124mh264[39m[38;5;124m'[39m,
[1;32m   1286[0m                 bitrate[38;5;241m=[39mmpl[38;5;241m.[39mrcParams[[38;5;124m'[39m[38;5;124manimation.bitrate[39m[38;5;124m'[39m],
[1;32m   1287[0m                 fps[38;5;241m=[39m[38;5;241m1000.[39m [38;5;241m/[39m [38;5;28mself[39m[38;5;241m.[39m_interval)
[1;32m   1288[0m [38;5;28mself[39m[38;5;241m.[39msave([38;5;28mstr[39m(path), writer[38;5;241m=[39mwriter)

File [0;32m/opt/hostedtoolcache/Python/3.8.18/x64/lib/python3.8/site-packages/matplotlib/animation.py:148[0m, in [0;36mMovieWriterRegistry.__getitem__[0;34m(self, name)[0m
[1;32m    146[0m [38;5;28;01mif[39;00m [38;5;28mself[39m[38;5;241m.[39mis_available(name):
[1;32m    147[0m     [38;5;28;01mreturn[39;00m [38;5;28mself[39m[38;5;241m.[39m_registered[name]
[0;32m--> 148[0m [38;5;28;01mraise[39;00m [38;5;167;01mRuntimeError[39;00m([38;5;124mf[39m[38;5;124m"[39m[38;5;124mRequested MovieWriter ([39m[38;5;132;01m{[39;00mname[38;5;132;01m}[39;00m[38;5;124m) not available[39m[38;5;124m"[39m)

[0;31mRuntimeError[0m: Requested MovieWriter (ffmpeg) not available

